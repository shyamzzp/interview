"use strict";(self.webpackChunkinterview=self.webpackChunkinterview||[]).push([[9210],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),u=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(r),y=n,f=d["".concat(c,".").concat(y)]||d[y]||p[y]||o;return r?a.createElement(f,s(s({ref:t},l),{},{components:r})):a.createElement(f,s({ref:t},l))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},969:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={tree_title:"Data Structure Glossary",description:"This will cover the most of the topics that will be part of the Data Structure Glossary.",last_modified:new Date("2022-07-01T13:40:13.401Z")},s="Data Structure Glossary",i={unversionedId:"data-structures/ds-glossary",id:"data-structures/ds-glossary",title:"Data Structure Glossary",description:"This will cover the most of the topics that will be part of the Data Structure Glossary.",source:"@site/docs/data-structures/ds-glossary.md",sourceDirName:"data-structures",slug:"/data-structures/ds-glossary",permalink:"/interview/docs/data-structures/ds-glossary",draft:!1,tags:[],version:"current",frontMatter:{tree_title:"Data Structure Glossary",description:"This will cover the most of the topics that will be part of the Data Structure Glossary.",last_modified:"2022-07-01T13:40:13.401Z"},sidebar:"docs",previous:{title:"DFS (Depth First Search)",permalink:"/interview/docs/data-structures/dfs"},next:{title:"Graph",permalink:"/interview/docs/data-structures/graph"}},c={},u=[{value:"Contiguous Array",id:"contiguous-array",level:3},{value:"Subsequence of an Array",id:"subsequence-of-an-array",level:3}],l=(p="SubsequenceArray",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var p;const d={toc:u};function y(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"data-structure-glossary"},"Data Structure Glossary"),(0,n.kt)("div",{class:"section-container pl0 pr0"},(0,n.kt)("div",{class:"section-item pl0"},(0,n.kt)("h3",{id:"contiguous-array"},"Contiguous Array"),(0,n.kt)("p",null,"Meaning : sharing a common border; touching. Part of the array whose index are adjacent."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"arr = [1,2,3,4,5,6,7,8,9,10]\narrContiguous = [4,5,6,7]  //length:4\n"))),(0,n.kt)("div",{class:"section-item"},(0,n.kt)("h3",{id:"subsequence-of-an-array"},"Subsequence of an Array"),(0,n.kt)("p",null,"A subsequence of an array is an ordered subset of the array's elements having the same sequential ordering as the original array."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"arr = [1,2,3,4,5,6,7,8,9,10]\narrSubsequence = [2,4,6,7,10]  //length:5\n")),(0,n.kt)(l,{mdxType:"SubsequenceArray"}))))}y.isMDXComponent=!0}}]);