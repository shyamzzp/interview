"use strict";(self.webpackChunkinterview=self.webpackChunkinterview||[]).push([[6636],{4084:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>m,default:()=>x,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var e=n(7462),l=(n(7294),n(7373));const r={tree_title:"Complexity",description:"This will cover the most of the topics that will be part of the Complexity.",last_modified:new Date("2022-06-08T15:36:32.363Z")},m="Complexity",d={unversionedId:"data-structures/complexity",id:"data-structures/complexity",title:"Complexity",description:"This will cover the most of the topics that will be part of the Complexity.",source:"@site/docs/data-structures/complexity.md",sourceDirName:"data-structures",slug:"/data-structures/complexity",permalink:"/interview/docs/data-structures/complexity",draft:!1,tags:[],version:"current",frontMatter:{tree_title:"Complexity",description:"This will cover the most of the topics that will be part of the Complexity.",last_modified:"2022-06-08T15:36:32.363Z"},sidebar:"docs",previous:{title:"Comparators",permalink:"/interview/docs/data-structures/comparators"},next:{title:"Deque (Doubly Ended Queue)",permalink:"/interview/docs/data-structures/dequeue"}},i={},p=[{value:"Big O performance - Java Collections.",id:"big-o-performance---java-collections",level:2},{value:"List",id:"list",level:3},{value:"Set",id:"set",level:3},{value:"Queue",id:"queue",level:3},{value:"Map",id:"map",level:3}],u={toc:p};function x(t){let{components:a,...n}=t;return(0,l.mdx)("wrapper",(0,e.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"complexity"},"Complexity"),(0,l.mdx)("h2",{id:"big-o-performance---java-collections"},"Big O performance - Java Collections."),(0,l.mdx)("h3",{id:"list"},"List"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"List"),(0,l.mdx)("th",{parentName:"tr",align:null},"Add"),(0,l.mdx)("th",{parentName:"tr",align:null},"Remove"),(0,l.mdx)("th",{parentName:"tr",align:null},"Get"),(0,l.mdx)("th",{parentName:"tr",align:null},"Contains"),(0,l.mdx)("th",{parentName:"tr",align:null},"Next"),(0,l.mdx)("th",{parentName:"tr",align:null},"Data Structure"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ArrayList"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"LinkedList"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Linked List")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"CopyOnWriteArrayList"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")))),(0,l.mdx)("h3",{id:"set"},"Set"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Set"),(0,l.mdx)("th",{parentName:"tr",align:null},"Add"),(0,l.mdx)("th",{parentName:"tr",align:null},"Remove"),(0,l.mdx)("th",{parentName:"tr",align:null},"Contains"),(0,l.mdx)("th",{parentName:"tr",align:null},"Next"),(0,l.mdx)("th",{parentName:"tr",align:null},"Size"),(0,l.mdx)("th",{parentName:"tr",align:null},"Data Structure"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"HashSet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(h/n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Table")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"LinkedHashSet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Table + Linked List")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"EnumSet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Bit Vector")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"TreeSet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Red-black tree")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"CopyOnWriteArraySet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ConcurrentSkipListSet"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Skip List")))),(0,l.mdx)("h3",{id:"queue"},"Queue"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Queue"),(0,l.mdx)("th",{parentName:"tr",align:null},"Offer"),(0,l.mdx)("th",{parentName:"tr",align:null},"Peak"),(0,l.mdx)("th",{parentName:"tr",align:null},"Poll"),(0,l.mdx)("th",{parentName:"tr",align:null},"Remove"),(0,l.mdx)("th",{parentName:"tr",align:null},"Size"),(0,l.mdx)("th",{parentName:"tr",align:null},"Data Structure"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"PriorityQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Priority Heap")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"LinkedList"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ArrayDequeue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Linked List")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ConcurrentLinkedQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Linked List")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ArrayBlockingQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"PriorirityBlockingQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Priority Heap")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"SynchronousQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"None!")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"DelayQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Priority Heap")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"LinkedBlockingQueue"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Linked List")))),(0,l.mdx)("h3",{id:"map"},"Map"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Map"),(0,l.mdx)("th",{parentName:"tr",align:null},"Get"),(0,l.mdx)("th",{parentName:"tr",align:null},"ContainsKey"),(0,l.mdx)("th",{parentName:"tr",align:null},"Next"),(0,l.mdx)("th",{parentName:"tr",align:null},"Data Structure"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"HashMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Table")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"LinkedHashMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Table + Linked List")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"IdentityHashMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"WeakHashMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Table")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"EnumMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Array")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"TreeMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Red-black tree")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ConcurrentHashMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Hash Tables")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"ConcurrentSkipListMap"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.mdx)("td",{parentName:"tr",align:null},"O(1)"),(0,l.mdx)("td",{parentName:"tr",align:null},"Skip List")))))}x.isMDXComponent=!0},7373:()=>{}}]);