"use strict";(self.webpackChunkinterview=self.webpackChunkinterview||[]).push([[2],{491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var s=n(7462),i=(n(7294),n(7373));const o={tree_title:"Leetcode 75 \ud83d\udea7",description:"This will cover up the problems/questions from the Leetcode 75 - Study Plan.",last_modified:new Date("2022-06-22T12:03:49.349Z")},l="Leetcode 75 \ud83d\udea7",d={unversionedId:"questions/studyplan-leetcode75",id:"questions/studyplan-leetcode75",title:"Leetcode 75 \ud83d\udea7",description:"This will cover up the problems/questions from the Leetcode 75 - Study Plan.",source:"@site/docs/questions/studyplan-leetcode75.md",sourceDirName:"questions",slug:"/questions/studyplan-leetcode75",permalink:"/interview/docs/questions/studyplan-leetcode75",draft:!1,tags:[],version:"current",frontMatter:{tree_title:"Leetcode 75 \ud83d\udea7",description:"This will cover up the problems/questions from the Leetcode 75 - Study Plan.",last_modified:"2022-06-22T12:03:49.349Z"},sidebar:"docs",previous:{title:"Leetcode Data Structure \ud83d\udea7",permalink:"/interview/docs/questions/studyplan-datastructure"},next:{title:"Top 100 Liked on Leetcode \ud83d\udea7",permalink:"/interview/docs/questions/top100-liked-leetcode"}},a={},u=[{value:"Top coding questions from Leetcode 75 Study Plan",id:"top-coding-questions-from-leetcode-75-study-plan",level:2},{value:"Level 1.1 Running Sum of 1d Array",id:"level-11-running-sum-of-1d-array",level:3},{value:"Level 1.2 Find Pivot Index",id:"level-12-find-pivot-index",level:3},{value:"References",id:"references",level:2}],r={toc:u};function m(e){let{components:t,...n}=e;return(0,i.mdx)("wrapper",(0,s.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"leetcode-75-"},"Leetcode 75 \ud83d\udea7"),(0,i.mdx)("h2",{id:"top-coding-questions-from-leetcode-75-study-plan"},"Top coding questions from Leetcode 75 Study Plan"),(0,i.mdx)("div",{class:"leetcode75-container"},(0,i.mdx)("div",{class:"leetcode75-item pl0"},(0,i.mdx)("h3",{id:"level-11-running-sum-of-1d-array"},"Level 1.1 Running Sum of 1d Array"),(0,i.mdx)("p",null,"Given an array nums. We define a running sum of an array as runningSum","[i]"," = sum(nums","[0]","\u2026nums","[i]",").\nReturn the running sum of nums."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java",metastring:"showLine Numbers",showLine:!0,Numbers:!0},"class Solution {\n    public int[] runningSum(int[] nums) {\n    }\n}\n")),(0,i.mdx)("p",null,"Input: nums = ","[1,2,3,4]"," | Output: ","[1,3,6,10]","\nExplanation: Running sum is obtained as follows: ","[1, 1+2, 1+2+3, 1+2+3+4]","."),(0,i.mdx)("span",{class:"tag-is-success"},"Prefix Sum")),(0,i.mdx)("div",{class:"leetcode75-item"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"Very easy problem to solve using prefix sum. You can keep a global variable for the sum and keep on iterating through the array and adding the current element to the sum. Along with that you don't need to take any extra space as you can assign the element to the array itself.\n\n")))),(0,i.mdx)("hr",null),(0,i.mdx)("div",{class:"leetcode75-container"},(0,i.mdx)("div",{class:"leetcode75-item pl0"},(0,i.mdx)("h3",{id:"level-12-find-pivot-index"},"Level 1.2 Find Pivot Index"),(0,i.mdx)("p",null,"Given an array of integers nums, calculate the pivot index of this array.\nThe pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right."),(0,i.mdx)("p",null,"If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.\nReturn the leftmost pivot index. If no such index exists, return -1."),(0,i.mdx)("p",null,"Input: nums = ","[1,7,3,6,5,6]"," Output: 3\nExplanation: The pivot index is 3.\nLeft sum = nums","[0]"," + nums","[1]"," + nums","[2]"," = 1 + 7 + 3 = 11\nRight sum = nums","[4]"," + nums","[5]"," = 5 + 6 = 11"),(0,i.mdx)("span",{class:"tag-is-success"},"Prefix Sum")),(0,i.mdx)("div",{class:"leetcode75-item"},(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"The idea behind solving the problem is simple you just have to find the index where the left sum is equal to the right sum. So you can total the sum of every element from the array. \n\nNow iterate through the array and check whether the leftSum==sum-leftSum-currentElement if yes then that's your index to be returned, else just add the current element to the leftSum.\n")))),(0,i.mdx)("h2",{id:"references"},"References"),(0,i.mdx)("ul",null,(0,i.mdx)("li",null,(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://leetcode.com/study-plan/leetcode-75/"},"https://leetcode.com/study-plan/leetcode-75/")))))}m.isMDXComponent=!0},7373:()=>{}}]);